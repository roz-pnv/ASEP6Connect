# Generated by Django 5.2.4 on 2025-08-22 07:41

import django.db.models.deletion
import meetings.models.agenda
import meetings.models.minutes
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text="Descriptive title of the meeting (e.g., 'Annual Board Review')", max_length=255)),
                ('meeting_type', models.CharField(choices=[('Board_Meeting', 'Board Meeting'), ('General_Assembly', 'General Assembly'), ('Extraordinary_Assembly', 'Extraordinary Assembly')], help_text='Type of meeting: Board, General Assembly, or Extraordinary Assembly', max_length=30)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('scheduled', 'Scheduled'), ('held', 'Held'), ('canceled', 'Canceled')], default='scheduled', help_text='Current status of the meeting (Draft, Scheduled, Held, or Canceled)', max_length=20)),
                ('date', models.DateTimeField(help_text='Scheduled date and time of the meeting')),
                ('location', models.CharField(blank=True, help_text='Physical meeting location', max_length=255)),
                ('online_link', models.URLField(blank=True, help_text='Link for online/virtual meeting (Zoom, Teams, etc.)', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the meeting was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp of the last update')),
                ('created_by', models.ForeignKey(help_text='User who created or organized the meeting', on_delete=django.db.models.deletion.CASCADE, related_name='created_meetings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Invite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('declined', 'Declined')], default='pending', help_text='Response status of the invite', max_length=20)),
                ('sent_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the invite was sent')),
                ('responded_at', models.DateTimeField(blank=True, help_text='Timestamp when the invite was responded to', null=True)),
                ('invited_user', models.ForeignKey(help_text='User who was invited to the meeting', on_delete=django.db.models.deletion.CASCADE, related_name='meeting_invites', to=settings.AUTH_USER_MODEL)),
                ('meeting', models.ForeignKey(help_text='Meeting this invite belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='invites', to='meetings.meeting')),
            ],
            options={
                'verbose_name': 'Meeting Invite',
                'verbose_name_plural': 'Meeting Invites',
            },
        ),
        migrations.CreateModel(
            name='AgendaItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of the agenda item', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Detailed description of the agenda item', null=True)),
                ('order', models.PositiveIntegerField(default=0, help_text='Order of the item within the meeting agenda')),
                ('file', models.FileField(blank=True, help_text='Optional supporting file', null=True, upload_to=meetings.models.agenda.agenda_upload_path)),
                ('requires_vote', models.BooleanField(default=False, help_text='Does this agenda item require voting?')),
                ('meeting', models.ForeignKey(help_text='Meeting this agenda item belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='agenda_items', to='meetings.meeting')),
            ],
            options={
                'verbose_name': 'Agenda Item',
                'verbose_name_plural': 'Agenda Items',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Minutes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summary', models.TextField(help_text='Brief summary of the meeting outcomes and discussions')),
                ('body', models.TextField(blank=True, help_text='Full minutes text (optional if a file is uploaded)', null=True)),
                ('file', models.FileField(blank=True, help_text='Optional file upload for the minutes document (PDF, DOC, etc.)', null=True, upload_to=meetings.models.minutes.minutes_file_upload_path)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('approved', 'Approved')], default='draft', help_text='Approval status of the minutes (Draft or Approved)', max_length=20)),
                ('approved_at', models.DateTimeField(blank=True, help_text='Date and time when the minutes were approved', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the minutes were created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp of the last update')),
                ('approved_by', models.ForeignKey(blank=True, help_text='User who reviewed and approved the minutes', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_minutes', to=settings.AUTH_USER_MODEL)),
                ('meeting', models.OneToOneField(help_text='Meeting instance this minutes record is associated with', on_delete=django.db.models.deletion.CASCADE, related_name='minutes', to='meetings.meeting')),
                ('recorded_by', models.ForeignKey(blank=True, help_text='User who recorded or authored the minutes', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recorded_minutes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Meeting Minutes',
                'verbose_name_plural': 'Meeting Minutes',
            },
        ),
        migrations.CreateModel(
            name='Motion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='Text of the motion/proposal to be voted on')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the motion was created')),
                ('agenda_item', models.ForeignKey(help_text='Agenda item that this motion belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='motions', to='meetings.agendaitem')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who proposed this motion', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_motions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice', models.CharField(choices=[('yes', 'Yes'), ('no', 'No'), ('abstain', 'Abstain')], help_text='Voting choice: Yes, No, Abstain', max_length=10)),
                ('voted_at', models.DateTimeField(auto_now_add=True, help_text='When the vote was cast')),
                ('motion', models.ForeignKey(help_text='Motion that this vote applies to', on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='meetings.motion')),
                ('voter', models.ForeignKey(help_text='User casting the vote', on_delete=django.db.models.deletion.CASCADE, related_name='votes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Vote',
                'verbose_name_plural': 'Votes',
            },
        ),
        migrations.AddIndex(
            model_name='meeting',
            index=models.Index(fields=['meeting_type'], name='meetings_me_meeting_b1d358_idx'),
        ),
        migrations.AddIndex(
            model_name='meeting',
            index=models.Index(fields=['date'], name='meetings_me_date_7423c8_idx'),
        ),
        migrations.AddIndex(
            model_name='meeting',
            index=models.Index(fields=['status'], name='meetings_me_status_14fbb6_idx'),
        ),
        migrations.AddIndex(
            model_name='invite',
            index=models.Index(fields=['meeting'], name='meetings_in_meeting_dcfd1e_idx'),
        ),
        migrations.AddIndex(
            model_name='invite',
            index=models.Index(fields=['status'], name='meetings_in_status_0d6dcd_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='invite',
            unique_together={('meeting', 'invited_user')},
        ),
        migrations.AddIndex(
            model_name='minutes',
            index=models.Index(fields=['status'], name='meetings_mi_status_ad4be7_idx'),
        ),
        migrations.AddIndex(
            model_name='minutes',
            index=models.Index(fields=['approved_at'], name='meetings_mi_approve_f337a2_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='vote',
            unique_together={('motion', 'voter')},
        ),
    ]
